Spiral Display
Easy

1. You are given a number n, representing the number of rows.
2. You are given a number m, representing the number of columns.
3. You are given n*m numbers, representing elements of 2d array a.
4. You are required to traverse and print the contents of the 2d array in form of a spiral.
Note - Please check the sample output for details.

Constraints
1 <= n <= 10^2
1 <= m <= 10^2
-10^9 <= e1, e2, .. n * m elements <= 10^9

Format
Input
A number n
A number m
e11
e12..
e21
e22..
.. n * m number of elements

Output
e11
e21
..
en1
en2
en3
..
enm
e(n-1)m
..
e1m
e1(m-1)
..
e12
e22
e32
..

Example
Sample Input

3
5
11
12
13
14
15
21
22
23
24
25
31
32
33
34
35

Sample Output
11
21
31
32
33
34
35
25
15
14
13
12
22
23
24




``````````````````````````````````Code``````````````````````````````````


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
       Scanner scn = new Scanner(System.in);
       int n = scn.nextInt();
       int m = scn.nextInt();
       int[][] arr = new int[n][m];
       
       for(int i=0;i<n;i++){
           for(int j=0;j<m;j++){
            arr[i][j] = scn.nextInt();
           }
       }
       int firstrow = 0;
       int firstcol = 0;
       int lastcol = arr[0].length-1;
       int lastrow = arr.length-1;
       int count = 0;
       while(count != (n*m)){
           for(int i=firstrow;i<=lastrow;i++){
               System.out.println(arr[i][firstcol]);
               count++;
               if(count == n*m){
                   return;
               }
           }
            firstcol++;
           for(int i=firstcol;i<=lastcol;i++){
               System.out.println(arr[lastrow][i]);
               count++;
               if(count == n*m){
                   return;
               }
           }
            lastrow--;
            for(int i=lastrow;i>=firstrow;i--){
                System.out.println(arr[i][lastcol]);
                count++;
                if(count == n*m){
                   return;
               }
            }
            lastcol--;
            for(int i=lastcol;i>=firstcol;i--){
                System.out.println(arr[firstrow][i]);
                count++;
                if(count == n*m){
                   return;
               }
            }
            firstrow++;
       }
               
    }

}