Count Sort
Easy

1. You are given an array(arr) of integers.
2. You have to sort the given array in increasing order using count sort.

Constraints
1 <= N <= 10000
-10^8 <= arr[i] <= 10^8

Format
Input
An Integer n 
arr1
arr2..
n integers

Output
Check the sample ouput and question video.

Example
Sample Input

5
7 
-2 
4 
1 
3

Sample Output
-2
1
3
4
7


````````````````````````````````Code``````````````````````````````````

Approach 1

import java.io.*;
import java.util.*;

public class Main {

  public static void countSort(int[] arr, int min, int max) {
   //write your code here
   int[] frequency = new int[max-min+1];
   for(int i=0;i<arr.length;i++){
     frequency[arr[i]-min]++;
   }
   int j = 0;
   for(int i=0;i<frequency.length;i++){
     if(frequency[i] != 0){
       for(int k=1;k<=frequency[i];k++){
         arr[j] = i+min;
         j++;
       }
     }
   }
   
  }

  public static void print(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      System.out.println(arr[i]);
    }
  }

  public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int[] arr = new int[n];
    int max = Integer.MIN_VALUE;
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      arr[i] = scn.nextInt();
      max = Math.max(max, arr[i]);
      min = Math.min(min, arr[i]);
    }
    countSort(arr,min,max);
    print(arr);
  }

}




Approach 2

import java.io.*;
import java.util.*;

public class Main {

  public static void countSort(int[] arr, int min, int max) {
    //Count Sort
    int[] frequency = new int[max-min+1];
    int[] prefixSumArr = new int[frequency.length];
    int[] res = new int[arr.length];
    //Making Frequency Array 
    for(int i=0;i<arr.length;i++){
      frequency[arr[i]-min]++;
    }
    //Making Prefix Sum ARRAY That contains last index of array 
    for(int i=0;i<frequency.length;i++){
      if(i != 0){
        prefixSumArr[i] = prefixSumArr[i-1] + frequency[i];
      }else{
        prefixSumArr[i] = frequency[i];
      }
    }
    //Sorting of array in inc order with Stability
    for(int i=arr.length-1;i>=0;i--){
      prefixSumArr[arr[i]-min]--;
      res[prefixSumArr[arr[i]-min]] = arr[i];
    }
    for(int i=0;i<res.length;i++){
      arr[i] = res[i];
    }
   
  }

  public static void print(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      System.out.println(arr[i]);
    }
  }

  public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int[] arr = new int[n];
    int max = Integer.MIN_VALUE;
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      arr[i] = scn.nextInt();
      max = Math.max(max, arr[i]);
      min = Math.min(min, arr[i]);
    }
    countSort(arr,min,max);
    print(arr);
  }

}