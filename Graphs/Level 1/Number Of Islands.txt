Number Of Islands
Easy

1. You are given a 2d array where 0's represent land and 1's represent water. 
     Assume every cell is linked to it's north, east, west and south cell.
2. You are required to find and count the number of islands.

Constraints
None

Format
Input
Input has been managed for you

Output
Number of islands

Example
Sample Input

8
8
0 0 1 1 1 1 1 1
0 0 1 1 1 1 1 1
1 1 1 1 1 1 1 0
1 1 0 0 0 1 1 0
1 1 1 1 0 1 1 0
1 1 1 1 0 1 1 0
1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 0

Sample Output
3



`````````````````````````````Code````````````````````````````


Approach 1


import java.io.*;
import java.util.*;

public class Main {
   public static int[][] dir = {{0,-1},{0,1},{-1,0},{1,0}};
   public static void dfs(int r,int c,int[][] arr ){
      arr[r][c] = 1;
      for(int i=0;i<4;i++){
         int nr = r + dir[i][0];
         int nc = c + dir[i][1];
         if(nr >= 0 && nc >= 0 && nr <= arr.length-1 && nc <= arr[0].length-1 && arr[nr][nc] == 0){
            dfs(nr,nc,arr);
         }
      }
      
   }
   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int m = Integer.parseInt(br.readLine());
      int n = Integer.parseInt(br.readLine());
      int[][] arr = new int[m][n];

      for (int i = 0; i < arr.length; i++) {
         String parts = br.readLine();
         for (int j = 0; j < arr[0].length; j++) {
            arr[i][j] = Integer.parseInt(parts.split(" ")[j]);
         }
      }

      // write your code here
      boolean[][] vis = new boolean[m][n];
      int noOfIsland = 0;
      for(int i=0;i<m;i++){
         for(int j=0;j<n;j++){
            if(arr[i][j] == 0){
               dfs(i,j,arr);
               noOfIsland++;
            }
         }
      }
      System.out.println(noOfIsland);
   }

}