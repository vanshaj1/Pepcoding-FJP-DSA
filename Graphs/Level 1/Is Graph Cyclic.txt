Is Graph Cyclic
Easy

1. You are given a graph.
2. You are required to find and print if the graph is cyclic.

Constraints
None

Format
Input
Input has been managed for you

Output
true if the graph is cyclic, false otherwise

Example
Sample Input

7
6
0 1 10
1 2 10
2 3 10
3 4 10
4 5 10
5 6 10

Sample Output
false




`````````````````````````````Code````````````````````````````



import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;
      int wt;

      Edge(int src, int nbr, int wt) {
         this.src = src;
         this.nbr = nbr;
         this.wt = wt;
      }
   }
   public static boolean isCycle(int src,ArrayList<Edge>[] graph,boolean[] vis){
            Queue<Integer> q = new ArrayDeque();
            q.add(src);
            while(!q.isEmpty()){
               int rsrc = q.remove();
               if(vis[rsrc] == true){
                  return true;
               }
               vis[rsrc] = true;
               for(Edge e: graph[rsrc]){
                   if(vis[e.nbr] != true){
                      q.add(e.nbr);
                   }
               }
            }
            return false;
   }
   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         int wt = Integer.parseInt(parts[2]);
         graph[v1].add(new Edge(v1, v2, wt));
         graph[v2].add(new Edge(v2, v1, wt));
      }

      // write your code here
      boolean[] vis = new boolean[vtces];

      for(int i=0;i<vtces;i++){
         if(vis[i] == false){
            if(isCycle(i,graph,vis)){
               System.out.println(true);
               return;
            }
         }
      }
      System.out.println(false);
   }
}